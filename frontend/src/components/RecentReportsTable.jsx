import React from 'react';
import {
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Paper,
  Chip,
  IconButton,
  Tooltip,
  Box,
  Typography
} from '@mui/material';
import DownloadIcon from '@mui/icons-material/Download';
import VisibilityIcon from '@mui/icons-material/Visibility';
import PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';
import TableChartIcon from '@mui/icons-material/TableChart';
import { motion } from 'framer-motion';

const RecentReportsTable = ({ reports = [] }) => {
  if (!reports || reports.length === 0) {
    return (
      <Box sx={{ 
        display: 'flex', 
        justifyContent: 'center', 
        alignItems: 'center', 
        height: 200,
        flexDirection: 'column',
        gap: 2
      }}>
        <TableChartIcon sx={{ fontSize: 40, color: 'text.secondary', opacity: 0.5 }} />
        <Typography variant="body2" color="text.secondary">
          No reports available
        </Typography>
      </Box>
    );
  }

  const getTypeIcon = (type) => {
    switch (type.toLowerCase()) {
      case 'pdf':
        return <PictureAsPdfIcon fontSize="small" sx={{ color: '#f44336' }} />;
      case 'excel':
        return <TableChartIcon fontSize="small" sx={{ color: '#4caf50' }} />;
      default:
        return null;
    }
  };

  const getTypeColor = (type) => {
    switch (type.toLowerCase()) {
      case 'pdf':
        return 'error';
      case 'excel':
        return 'success';
      default:
        return 'default';
    }
  };

  // Animation variants
  const tableVariants = {
    hidden: { opacity: 0 },
    show: {
      opacity: 1,
      transition: {
        staggerChildren: 0.05
      }
    }
  };

  const rowVariants = {
    hidden: { opacity: 0, y: 20 },
    show: { opacity: 1, y: 0 }
  };

  return (
    <TableContainer component={Paper} sx={{ boxShadow: 'none' }}>
      <Table sx={{ minWidth: 650 }} aria-label="recent reports table">
        <TableHead>
          <TableRow>
            <TableCell>Report Type</TableCell>
            <TableCell>Name</TableCell>
            <TableCell>Date</TableCell>
            <TableCell>Generated By</TableCell>
            <TableCell align="right">Actions</TableCell>
          </TableRow>
        </TableHead>
        <motion.tbody
          variants={tableVariants}
          initial="hidden"
          animate="show"
        >
          {reports.map((report) => (
            <motion.tr
              key={report.id}
              variants={rowVariants}
              component={TableRow}
              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}
            >
              <TableCell>
                <Chip
                  icon={getTypeIcon(report.type)}
                  label={report.type}
                  color={getTypeColor(report.type)}
                  size="small"
                  variant="outlined"
                />
              </TableCell>
              <TableCell>{report.name}</TableCell>
              <TableCell>{report.date}</TableCell>
              <TableCell>{report.user}</TableCell>
              <TableCell align="right">
                <Tooltip title="Preview">
                  <IconButton size="small" sx={{ mr: 1 }}>
                    <VisibilityIcon fontSize="small" />
                  </IconButton>
                </Tooltip>
                <Tooltip title="Download">
                  <IconButton size="small">
                    <DownloadIcon fontSize="small" />
                  </IconButton>
                </Tooltip>
              </TableCell>
            </motion.tr>
          ))}
        </motion.tbody>
      </Table>
    </TableContainer>
  );
};

export default RecentReportsTable;